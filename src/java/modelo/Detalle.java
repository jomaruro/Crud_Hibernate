package modelo;
// Generated 05-oct-2018 10:47:59 by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Detalle generated by hbm2java
 */
@Entity
@Table(name = "DETALLE",
         schema = "CRUD_JDBC"
)
public class Detalle implements java.io.Serializable {

    
    private DetalleId id;
    private Articulo articulo;
    private Cabecera cabecera;
    private int bultos;
    private int cantidad;
    private double precio;
    private Date fechaCreacion;
    private Date fechaModificacion;

    public Detalle() {
    }

    public Detalle(DetalleId id, Cabecera cabecera) {
        this.id = id;
        this.cabecera = cabecera;
    }

    public Detalle(DetalleId id, Articulo articulo, Cabecera cabecera, int bultos, int cantidad, double precio, Date fechaCreacion, Date fechaModificacion) {
        this.id = id;
        this.articulo = articulo;
        this.cabecera = cabecera;
        this.bultos = bultos;
        this.cantidad = cantidad;
        this.precio = precio;
        this.fechaCreacion = fechaCreacion;
        this.fechaModificacion = fechaModificacion;
    }

    @EmbeddedId
    @AttributeOverrides({
        @AttributeOverride(name = "numero", column = @Column(name = "NUMERO", nullable = false, precision = 10, scale = 0)), 
        @AttributeOverride(name = "fecha", column = @Column(name = "FECHA", nullable = false, length = 10)), 
        @AttributeOverride(name = "orden", column = @Column(name = "ORDEN", nullable = false, precision = 10, scale = 0))})
    public DetalleId getId() {
        return this.id;
    }

    public void setId(DetalleId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ID_ARTICULO")
    public Articulo getArticulo() {
        return this.articulo;
    }

    public void setArticulo(Articulo articulo) {
        this.articulo = articulo;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumns({
        @JoinColumn(name = "NUMERO", referencedColumnName = "NUMERO", nullable = false, insertable = false, updatable = false), 
        @JoinColumn(name = "FECHA", referencedColumnName = "FECHA", nullable = false, insertable = false, updatable = false)})
    public Cabecera getCabecera() {
        return this.cabecera;
    }

    public void setCabecera(Cabecera cabecera) {
        this.cabecera = cabecera;
    }

    @Column(name = "BULTOS", precision = 4, scale = 0)
    public int getBultos() {
        return this.bultos;
    }

    public void setBultos(int bultos) {
        this.bultos = bultos;
    }

    @Column(name = "CANTIDAD", precision = 4, scale = 0)
    public int getCantidad() {
        return this.cantidad;
    }

    public void setCantidad(int cantidad) {
        this.cantidad = cantidad;
    }

    @Column(name = "PRECIO", precision = 6)
    public double getPrecio() {
        return this.precio;
    }

    public void setPrecio(double precio) {
        this.precio = precio;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "FECHA_CREACION", length = 7)
    public Date getFechaCreacion() {
        return this.fechaCreacion;
    }

    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "FECHA_MODIFICACION", length = 7)
    public Date getFechaModificacion() {
        return this.fechaModificacion;
    }

    public void setFechaModificacion(Date fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }
}
